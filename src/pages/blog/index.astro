  ---
  import { getCollection } from 'astro:content';
  const allPosts = await getCollection('posts');
  const posts = allPosts.filter((post) => post.data.isPublished);
  const allTags = Array.from(
    new Set(posts.flatMap(post => post.data.tags || []))
  );
  ---

  <!DOCTYPE html>
  <html lang="en">
    <head>
      <meta charset="utf-8" />
      <title>Blog â€“ Rayhan M</title>
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="stylesheet" href="/css/normalize.css" />
      <link rel="stylesheet" href="/css/skeleton.css" />
      <link rel="stylesheet" href="/css/custom.css" />
      <link rel="icon" type="image/png" href="/images/favicon.png" />
      <link href="https://fonts.googleapis.com/css2?family=Raleway&display=swap" rel="stylesheet" />
      <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js" defer></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" defer></script>
      <script src="https://kit.fontawesome.com/8c35c08da0.js" crossorigin="anonymous" defer></script>
      <style>
        .blog-post {
          margin-bottom: 2.5rem;
          padding: 1.5rem;
          border: 1px solid #ddd;
          border-radius: 12px;
          background: #fff;
          transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .blog-post:hover {
          transform: translateY(-5px);
          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .blog-title {
          font-size: 1.5rem;
          font-weight: bold;
          color: #222;
          margin-bottom: 0.5rem;
        }

        .blog-date {
          font-size: 0.95rem;
          color: #666;
          margin-bottom: 0.75rem;
        }

        .blog-header {
          text-align: center;
          margin: 9rem 0 3rem 0;
        }

        .blog-header h1 {
          font-size: 2.5rem;
          margin-bottom: 0.5rem;
        }

        .back-home {
          text-align: center;
          margin-bottom: 2rem;
        }

        .back-home a {
          color: #111;
          font-weight: 600;
          text-decoration: none;
          border-bottom: 2px solid #111;
        }

        .back-home a:hover {
          opacity: 0.8;
        }

        .blog-grid {
          display: grid;
          grid-template-columns: repeat(3, 1fr);
          gap: 2rem 2rem;
          row-gap: 5rem;
          margin-top: 2rem;
          justify-items: center;
          margin-bottom: 16rem;
        }

        .blog-card {
          display: flex;
          flex-direction: column;
          padding: 0;
          border: 1px solid #ddd;
          border-radius: 12px;
          background: #fff;
          transition: transform 0.3s ease, box-shadow 0.3s ease;
          height: 100%;
          min-height: 150px;
          overflow: hidden;
          text-decoration: none;
          color: inherit;
          width: 100%;
          max-width: 350px;
        }

        .blog-hero-image {
          width: 100%;
          height: 150px;
          overflow: hidden;
          border-radius: 12px 12px 0 0;
        }

        .blog-hero-image img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          transition: transform 0.3s ease;
        }

        .blog-card:hover .blog-hero-image img {
          transform: scale(1.05);
        }

        .blog-content {
          padding: 1.5rem;
          display: flex;
          flex-direction: column;
          flex-grow: 1;
        }

        .blog-card:hover {
          transform: translateY(-5px);
          box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
        }

        .blog-title {
          font-size: 1.5rem;
          font-weight: bold;
          color: #222;
          margin-bottom: 0.5rem;
          margin-top: 0;
        }

        .blog-title:hover {
          color: #555;
        }

        .blog-date {
          font-size: 0.95rem;
          color: #666;
          margin-bottom: 0.75rem;
        }

        .blog-description {
          display: -webkit-box;
          -webkit-line-clamp: 3;
          -webkit-box-orient: vertical;
          overflow: hidden;
          text-overflow: ellipsis;
          line-height: 1.5;
          margin-bottom: auto;
          flex-grow: 1;
        }

        .tag-list {
          margin-top: 1rem;
          display: flex;
          flex-wrap: wrap;
          gap: 0.5rem;
          min-height: 2rem;
        }

        .tag-badge {
          font-size: 0.8rem;
          padding: 0.25rem 0.6rem;
          background-color: #f1f1f1;
          color: #444;
          border-radius: 999px;
          display: inline-block;
        }

        .tag-badge:hover {
          background-color: var(--accent, #3A5D44);
          color: white;
        }

        @media (max-width: 1200px) {
          .blog-grid {
            grid-template-columns: repeat(2, 1fr);
          }
        }

        @media (max-width: 768px) {
          .blog-grid {
            grid-template-columns: 1fr;
          }
          .blog-card {
            max-width: 100%;
          }
          .floating-nav {
            top: 1rem;
            left: 1rem;
            min-width: auto;
            z-index: 1001;
          }

          .mobile-nav-toggle {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 4px;
            width: 30px;
            height: 30px;
            background: white;
            border: 1px solid #eee;
            border-radius: 6px;
            padding: 8px;
            cursor: pointer;
            transition: all 0.2s ease;
            position: relative;
            z-index: 1002;
          }

          .hamburger-line {
            width: 100%;
            height: 2px;
            background: #333;
            transition: all 0.3s ease;
          }

          .mobile-nav-toggle.active .hamburger-line:nth-child(1) {
            transform: rotate(45deg) translate(6px, 6px);
          }

          .mobile-nav-toggle.active .hamburger-line:nth-child(2) {
            opacity: 0;
          }

          .mobile-nav-toggle.active .hamburger-line:nth-child(3) {
            transform: rotate(-45deg) translate(6px, -6px);
          }

          .nav-menu {
            position: fixed;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100vh;
            background: white;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 3rem;
            transition: left 0.4s ease;
            z-index: 999;
            cursor: pointer;
          }

          .nav-menu.show {
            left: 0;
          }

          .nav-item {
            padding: 2rem 4rem;
            gap: 2.5rem;
            font-size: 5rem;
            border-bottom: none;
            cursor: pointer;
          }

          .nav-number {
            font-size: 5rem;
            min-width: 120px;
            height: 120px;
          }

          .nav-label {
            font-size: 9rem;
            font-weight: 500;
          }
        }

        @media (min-width: 769px) {
          .mobile-nav-toggle {
            display: none;
          }

          .nav-menu {
            position: static;
            opacity: 1;
            visibility: visible;
            transform: none;
            background: none;
            border: none;
            border-radius: 0;
          }
        }

        .hero-placeholder {
          width: 100%;
          height: 100%;
          background: white;
        }

        .blog-divider {
          height: 1px;
          background: linear-gradient(to right, #ddd, #ccc, #ddd);
          margin: 2.5rem 0;
          border-radius: 1px;
          opacity: 0.9;
        }

        footer {
          margin-top: 4rem;
          text-align: center;
          font-size: 1.4rem;
          color: #999;
        }

        .footer-content {
          max-width: calc(3 * 350px + 2 * 2rem);
          margin: 0 auto;
        }

        /* Floating Navigation Styles */
        .floating-nav {
          position: fixed;
          top: 2rem;
          left: 2rem;
          z-index: 1000;
          background: white;
          border-radius: 0;
          min-width: 140px;
        }

        .nav-item {
          display: flex;
          align-items: center;
          gap: 0.8rem;
          padding: 0.7rem 1rem;
          text-decoration: none;
          color: #333;
          font-size: 1rem;
          font-weight: 400;
          transition: all 0.3s ease;
          border-bottom: 1px solid #f5f5f5;
          position: relative;
          overflow: hidden;
        }

        .nav-item::before {
          content: '';
          position: absolute;
          top: 0;
          left: -100%;
          width: 100%;
          height: 100%;
          background: #f8f8f8;
          transition: left 0.3s ease;
          z-index: -1;
        }

        .nav-item:hover::before {
          left: 0;
        }

        .nav-item:last-child {
          border-bottom: none;
        }

        .nav-item.active .nav-number {
          background: #6b8e6b;
          color: white;
        }

        .nav-number {
          font-size: 1rem;
          font-weight: 500;
          min-width: 24px;
          height: 24px;
          display: flex;
          align-items: center;
          justify-content: center;
          transition: all 0.2s ease;
        }

        .nav-label {
          font-size: 1.1rem;
          font-weight: 400;
          letter-spacing: 0.5px;
        }

      </style>
    </head>
    <body>
      <!-- Floating Navigation Menu -->
      <nav class="floating-nav">
        <div class="mobile-nav-toggle" id="mobileNavToggle">
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
        </div>
        <div class="nav-menu" id="navMenu">
          <a href="/" class="nav-item">
            <span class="nav-number">01</span>
            <span class="nav-label">HOME</span>
          </a>
          <a href="/blog" class="nav-item active">
            <span class="nav-number">02</span>
            <span class="nav-label">BLOG</span>
          </a>
          <a href="/projects" class="nav-item">
            <span class="nav-number">03</span>
            <span class="nav-label">PROJECTS</span>
          </a>
          <a href="/about-me" class="nav-item">
            <span class="nav-number">04</span>
            <span class="nav-label">ABOUT</span>
          </a>
          <a href="/contact" class="nav-item">
            <span class="nav-number">05</span>
            <span class="nav-label">CONTACT</span>
          </a>
        </div>
      </nav>

      <div class="container">
        <div class="blog-header">
          <h1>ðŸ“š Blog</h1>
          <p>Thoughts, notes, and everything in-between.</p>
        </div>

        <div class="blog-grid">
          {posts.map(({ slug, data }) => (
            <a 
              href={`/blog/${slug}`}
              class="blog-card" 
              data-tags={data.tags ? data.tags.join(',') : ''}
            >
              <div class="blog-hero-image">
                {data.heroImage ? (
                  <img src={data.heroImage} alt={data.title} loading="lazy" />
                ) : (
                  <div class="hero-placeholder"></div>
                )}
              </div>
              <div class="blog-content">
                <h3 class="blog-title">{data.title}</h3>
                <div class="blog-date">
                  {new Date(data.date).toLocaleDateString()}
                </div>
                <p class="blog-description">{data.description ?? "No description provided."}</p>

                <div class="tag-list">
                  {data.tags && data.tags.length > 0 ? (
                    data.tags.map(tag => (
                      <span class="tag-badge">#{tag}</span>
                    ))
                  ) : null}
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>

      <footer>
        <div class="footer-content">
          <div class="blog-divider"></div>

          <div style="display: flex; flex-direction: column; align-items: center; gap: 0.8rem; margin-top: 4rem;">
            <nav style="display: flex; gap: 1rem; flex-wrap: wrap; justify-content: center; font-size: 1.4rem;">
              <a href="/" style="text-decoration: none; color: inherit;">Home</a>
              <a href="/about-me" style="text-decoration: none; color: inherit;">About</a>
              <a href="/blog" style="text-decoration: none; color: inherit;">Blog</a>
              <a href="/projects" style="text-decoration: none; color: inherit;">Projects</a>
              <a href="/contact" style="text-decoration: none; color: inherit;">Contact</a>
            </nav>

            <div style="font-size: 1.4rem; color: #777;">
              Â© {new Date().getFullYear()} Rayhan Maheswara Pramanda
            </div>

            <div style="display: flex; gap: 1rem; justify-content: center; font-size: 1.6rem;">
              <a href="https://github.com/rayhanmp" target="_blank" rel="noopener" aria-label="GitHub">
                <i class="fab fa-github"></i>
              </a>
              <a href="https://linkedin.com/in/rayhanmp" target="_blank" rel="noopener" aria-label="LinkedIn">
                <i class="fab fa-linkedin"></i>
              </a>
              <a href="mailto:rayhanmpramanda@gmail.com" aria-label="Email">
                <i class="fas fa-envelope"></i>
              </a>
            </div>

            <div style="margin-top: 1rem;">
              <a href="#" style="font-size: 1.2rem; color: #aaa; text-decoration: underline;">Back to top â†‘</a>
            </div>
          </div>
        </div>
      </footer>

      <script is:inline>
        window.addEventListener('DOMContentLoaded', function () {
          // Mobile hamburger menu toggle
          const mobileToggle = document.getElementById('mobileNavToggle');
          const navMenu = document.getElementById('navMenu');
          
          if (mobileToggle && navMenu) {
            // Toggle menu when clicking hamburger
            mobileToggle.addEventListener('click', function(e) {
              e.stopPropagation();
              mobileToggle.classList.toggle('active');
              navMenu.classList.toggle('show');
            });

            // Close menu when clicking anywhere on the overlay (but not on nav items)
            navMenu.addEventListener('click', function(event) {
              // Only close if clicking on the background, not on nav items
              if (event.target === navMenu) {
                mobileToggle.classList.remove('active');
                navMenu.classList.remove('show');
              }
            });

            // Close menu when pressing escape key
            document.addEventListener('keydown', function(event) {
              if (event.key === 'Escape' && navMenu.classList.contains('show')) {
                mobileToggle.classList.remove('active');
                navMenu.classList.remove('show');
              }
            });

            // Close menu when clicking nav items (navigate)
            const navItems = navMenu.querySelectorAll('.nav-item');
            navItems.forEach(item => {
              item.addEventListener('click', function() {
                mobileToggle.classList.remove('active');
                navMenu.classList.remove('show');
              });
            });
          }

          // Text shuffle animation
          function shuffleText(element, originalText, duration = 300) {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            const steps = 4;
            const stepDuration = duration / steps;
            let currentStep = 0;

            const shuffleInterval = setInterval(() => {
              let shuffledText = '';
              for (let i = 0; i < originalText.length; i++) {
                if (currentStep > steps * (i / originalText.length)) {
                  shuffledText += originalText[i];
                } else {
                  shuffledText += chars[Math.floor(Math.random() * chars.length)];
                }
              }
              element.textContent = shuffledText;
              currentStep++;

              if (currentStep >= steps) {
                clearInterval(shuffleInterval);
                element.textContent = originalText;
              }
            }, stepDuration);
          }

          // Add hover animation to nav labels (desktop only)
          const navItems = document.querySelectorAll('.nav-label');
          navItems.forEach(item => {
            const originalText = item.textContent;
            
            item.parentElement.addEventListener('mouseenter', () => {
              if (window.innerWidth > 768) {
                shuffleText(item, originalText, 500);
              }
            });
          });

          // Animation
          anime({
            targets: '.blog-card',
            opacity: [0, 1],
            translateY: [20, 0],
            delay: anime.stagger(100),
            duration: 700,
            easing: 'easeOutQuad'
          });
        });
      </script>
    </body>
  </html>
