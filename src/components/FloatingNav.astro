---
export interface Props {
  currentPage?: string;
}

const { currentPage } = Astro.props;

const navItems = [
  { href: '/', label: 'HOME', number: '01' },
  { href: '/blog', label: 'BLOG', number: '02' },
  { href: '/projects', label: 'PROJECTS', number: '03' },
  { href: '/about-me', label: 'ABOUT', number: '04' },
  { href: '/contact', label: 'CONTACT', number: '05' }
];

// Function to check if current page matches the nav item
function isActive(href: string, currentPage?: string) {
  if (!currentPage) return false;
  if (href === '/' && currentPage === '/') return true;
  if (href !== '/' && currentPage.startsWith(href)) return true;
  return false;
}
---

<!-- Floating Navigation Menu -->
<nav class="floating-nav">
  <div class="mobile-nav-toggle" id="mobileNavToggle">
    <span class="hamburger-line"></span>
    <span class="hamburger-line"></span>
    <span class="hamburger-line"></span>
  </div>
  <div class="nav-menu" id="navMenu">
    {navItems.map(item => (
      <a href={item.href} class={`nav-item ${isActive(item.href, currentPage) ? 'active' : ''}`}>
        <span class="nav-number">{item.number}</span>
        <span class="nav-label">{item.label}</span>
      </a>
    ))}
  </div>
</nav>

<style>
  /* Floating Navigation Styles */
  .floating-nav {
    position: fixed;
    top: 2rem;
    left: 2rem;
    z-index: 1000;
    background: white;
    border-radius: 0;
    min-width: 140px;
  }

  .nav-item {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    padding: 0.7rem 1rem;
    text-decoration: none;
    color: #333;
    font-size: 1rem;
    font-weight: 400;
    transition: all 0.3s ease;
    border-bottom: 1px solid #f5f5f5;
    position: relative;
    overflow: hidden;
  }

  .nav-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: #f8f8f8;
    transition: left 0.3s ease;
    z-index: -1;
  }

  .nav-item:hover::before {
    left: 0;
  }

  .nav-item:last-child {
    border-bottom: none;
  }

  .nav-item.active .nav-number {
    background: #6b8e6b;
    color: white;
  }

  .nav-number {
    font-size: 1rem;
    font-weight: 500;
    min-width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }

  .nav-label {
    font-size: 1.1rem;
    font-weight: 400;
    letter-spacing: 0.5px;
  }

  @media (max-width: 768px) {
    .floating-nav {
      top: 1rem;
      left: 1rem;
      min-width: auto;
      z-index: 1001;
    }

    .mobile-nav-toggle {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 4px;
      width: 30px;
      height: 30px;
      background: white;
      border: 1px solid #eee;
      border-radius: 6px;
      padding: 8px;
      cursor: pointer;
      transition: all 0.2s ease;
      position: relative;
      z-index: 1002;
    }

    .hamburger-line {
      width: 100%;
      height: 2px;
      background: #333;
      transition: all 0.3s ease;
    }

    .mobile-nav-toggle.active .hamburger-line:nth-child(1) {
      transform: rotate(45deg) translate(6px, 6px);
    }

    .mobile-nav-toggle.active .hamburger-line:nth-child(2) {
      opacity: 0;
    }

    .mobile-nav-toggle.active .hamburger-line:nth-child(3) {
      transform: rotate(-45deg) translate(6px, -6px);
    }

    .nav-menu {
      position: fixed;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100vh;
      background: white;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 3rem;
      transition: left 0.4s ease;
      z-index: 999;
      cursor: pointer;
    }

    .nav-menu.show {
      left: 0;
    }

    .nav-item {
      padding: 2rem 4rem;
      gap: 2.5rem;
      font-size: 5rem;
      border-bottom: none;
      cursor: pointer;
    }

    .nav-number {
      font-size: 5rem;
      min-width: 120px;
      height: 120px;
    }

    .nav-label {
      font-size: 9rem;
      font-weight: 500;
    }
  }

  @media (min-width: 769px) {
    .mobile-nav-toggle {
      display: none;
    }

    .nav-menu {
      position: static;
      opacity: 1;
      visibility: visible;
      transform: none;
      background: none;
      border: none;
      border-radius: 0;
    }
  }
</style>

<script>
  // Text shuffle animation
  function shuffleText(element: HTMLElement, originalText: string, duration = 300) {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const steps = 4;
    const stepDuration = duration / steps;
    let currentStep = 0;

    const shuffleInterval = setInterval(() => {
      let shuffledText = '';
      for (let i = 0; i < originalText.length; i++) {
        if (currentStep > steps * (i / originalText.length)) {
          shuffledText += originalText[i];
        } else {
          shuffledText += chars[Math.floor(Math.random() * chars.length)];
        }
      }
      element.textContent = shuffledText;
      currentStep++;

      if (currentStep >= steps) {
        clearInterval(shuffleInterval);
        element.textContent = originalText;
      }
    }, stepDuration);
  }

  // Mobile hamburger menu toggle
  const mobileToggle = document.getElementById('mobileNavToggle');
  const navMenu = document.getElementById('navMenu');
  
  if (mobileToggle && navMenu) {
    // Toggle menu when clicking hamburger
    mobileToggle.addEventListener('click', function(e) {
      e.stopPropagation();
      mobileToggle.classList.toggle('active');
      navMenu.classList.toggle('show');
    });

    // Close menu when clicking anywhere on the overlay (but not on nav items)
    navMenu.addEventListener('click', function(event) {
      // Only close if clicking on the background, not on nav items
      if (event.target === navMenu) {
        mobileToggle.classList.remove('active');
        navMenu.classList.remove('show');
      }
    });

    // Close menu when pressing escape key
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape' && navMenu.classList.contains('show')) {
        mobileToggle.classList.remove('active');
        navMenu.classList.remove('show');
      }
    });

    // Close menu when clicking nav items (navigate)
    const navItems = navMenu.querySelectorAll('.nav-item');
    navItems.forEach(item => {
      item.addEventListener('click', function() {
        mobileToggle.classList.remove('active');
        navMenu.classList.remove('show');
      });
    });
  }

  // Add hover animation to nav labels (desktop only)
  const navLabels = document.querySelectorAll('.nav-label');
  navLabels.forEach(item => {
    const originalText = item.textContent || '';
    
    item.parentElement?.addEventListener('mouseenter', () => {
      if (window.innerWidth > 768) {
        shuffleText(item as HTMLElement, originalText, 500);
      }
    });
  });
</script> 